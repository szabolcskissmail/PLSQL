DROP TABLE SZABOLCS.PRODUCT;
/

DROP TABLE SZABOLCS.PRODUCT_TYPE;
/

CREATE TABLE SZABOLCS.PRODUCT_TYPE (
    PRODUCT_TYPE_ID VARCHAR2(10) NOT NULL PRIMARY KEY,
    DESCRIPTION VARCHAR2(100) NOT NULL,
    CRD DATE DEFAULT (SYSDATE) NOT NULL,
    CRU VARCHAR2(30) DEFAULT (USER) NOT NULL,
    LMD DATE DEFAULT (SYSDATE) NOT NULL,
    LMU VARCHAR2(30) DEFAULT (USER) NOT NULL
);
/

DROP PUBLIC SYNONYM PRODUCT_TYPE;
/

CREATE PUBLIC SYNONYM PRODUCT_TYPE FOR SZABOLCS.PRODUCT_TYPE;
/

CREATE OR REPLACE TRIGGER SZABOLCS.PRODUCT_TYPE_TRG1 
    BEFORE INSERT ON SZABOLCS.PRODUCT_TYPE 
    REFERENCING OLD AS OLD NEW AS NEW
    FOR EACH ROW
    BEGIN
        :NEW.CRD := SYSDATE;
        :NEW.CRU := USER;
        :NEW.LMD := SYSDATE;
        :NEW.LMU := USER;
    END;
    /
    
CREATE OR REPLACE TRIGGER SZABOLCS.PRODUCT_TYPE_TRG2
    BEFORE UPDATE ON SZABOLCS.PRODUCT_TYPE 
    REFERENCING OLD AS OLD NEW AS NEW
    FOR EACH ROW
    BEGIN
        :NEW.CRD := :OLD.CRD;
        :NEW.CRU := :OLD.CRU;
        :NEW.LMD := SYSDATE;
        :NEW.LMU := USER;
    END;
    /

CREATE TABLE SZABOLCS.PRODUCT (
    PRODUCT_ID VARCHAR2(10) PRIMARY KEY,
    PARENT_PRODUCT_ID VARCHAR2(10),
    PRODUCT_TYPE_ID VARCHAR2(10) NOT NULL,
    NAME VARCHAR2(50) NOT NULL,
    DESCRIPTION VARCHAR2(100) NOT NULL,
    CRD DATE DEFAULT (SYSDATE) NOT NULL,
    CRU VARCHAR2(30) DEFAULT (USER) NOT NULL,
    LMD DATE DEFAULT (SYSDATE) NOT NULL,
    LMU VARCHAR2(30) DEFAULT (USER) NOT NULL,
    CONSTRAINT fk_parent_product_id FOREIGN KEY (PARENT_PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
    CONSTRAINT fk_product_type_id FOREIGN KEY (PRODUCT_TYPE_ID) REFERENCES PRODUCT_TYPE(PRODUCT_TYPE_ID)
);
/

DROP PUBLIC SYNONYM PRODUCT;
/

CREATE PUBLIC SYNONYM PRODUCT FOR SZABOLCS.PRODUCT;
/

CREATE OR REPLACE TRIGGER SZABOLCS.PRODUCT_TRG1 
    BEFORE INSERT ON SZABOLCS.PRODUCT
    REFERENCING OLD AS OLD NEW AS NEW
    FOR EACH ROW
    BEGIN
        :NEW.CRD := SYSDATE;
        :NEW.CRU := USER;
        :NEW.LMD := SYSDATE;
        :NEW.LMU := USER;
    END;
    /
    
CREATE OR REPLACE TRIGGER SZABOLCS.PRODUCT_TRG2
    BEFORE UPDATE ON SZABOLCS.PRODUCT
    REFERENCING OLD AS OLD NEW AS NEW
    FOR EACH ROW
    BEGIN
        :NEW.CRD := :OLD.CRD;
        :NEW.CRU := :OLD.CRU;
        :NEW.LMD := SYSDATE;
        :NEW.LMU := USER;
    END;
    /
    
    
DECLARE 
    v_product_type_id product_type.product_type_id%type;
    v_product_type_count number;
    cursor c_product_type is select * from product_type pt;
    v_product_id_counter PLS_INTEGER;
BEGIN
    DELETE FROM product;
    DELETE FROM product_type;
    FOR i IN 1 .. 100 LOOP
        INSERT INTO product_type (PRODUCT_TYPE_ID, DESCRIPTION)
        VALUES('PT'||i, 'DESC '|| i);
    END LOOP;
    v_product_id_counter := 1;
    FOR v_product_type in c_product_type LOOP
        FOR i IN 1 .. DBMS_RANDOM.VALUE(1, 100) LOOP
            INSERT INTO PRODUCT (PRODUCT_ID, PARENT_PRODUCT_ID, PRODUCT_TYPE_ID, NAME, DESCRIPTION) VALUES('P'||v_product_id_counter, NULL, v_product_type.product_type_id, 'NAME'||v_product_id_counter, 'DESC'||v_product_id_counter);
            v_product_id_counter := v_product_id_counter + 1;
        END LOOP;
    END LOOP;
    COMMIT;
END;
/

